<?php

namespace DoctrineProxies\__CG__\Concrete\Package\Football\Src\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Club extends \Concrete\Package\Football\Src\Entity\Club implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

        return parent::__set($name, $value);
    }



    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'sID', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'teams', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'name', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'country', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'venue', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'coach', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'creation', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'website', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'imageId', 'protect', 'protectRead', 'protectWrite');
        }

        return array('__isInitialized__', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'sID', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'teams', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'name', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'country', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'venue', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'coach', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'creation', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'website', '' . "\0" . 'Concrete\\Package\\Football\\Src\\Entity\\Club' . "\0" . 'imageId', 'protect', 'protectRead', 'protectWrite');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Club $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addTeam($name, $league, $penalty = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTeam', array($name, $league, $penalty));

        return parent::addTeam($name, $league, $penalty);
    }

    /**
     * {@inheritDoc}
     */
    public function getsID()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getsID();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getsID', array());

        return parent::getsID();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getVenue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVenue', array());

        return parent::getVenue();
    }

    /**
     * {@inheritDoc}
     */
    public function setVenue($venue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVenue', array($venue));

        return parent::setVenue($venue);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoach', array());

        return parent::getCoach();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoach($coach)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoach', array($coach));

        return parent::setCoach($coach);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageId', array());

        return parent::getImageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageId($imageId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageId', array($imageId));

        return parent::setImageId($imageId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreation', array());

        return parent::getCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreation($creation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreation', array($creation));

        return parent::setCreation($creation);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsite', array());

        return parent::getWebsite();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsite($website)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsite', array($website));

        return parent::setWebsite($website);
    }

    /**
     * {@inheritDoc}
     */
    public function add()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'add', array());

        return parent::add();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array());

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function get($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get', array($name));

        return parent::get($name);
    }

    /**
     * {@inheritDoc}
     */
    public function set($name, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set', array($name, $value));

        return parent::set($name, $value);
    }

}
